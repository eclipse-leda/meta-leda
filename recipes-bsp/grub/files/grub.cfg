# /********************************************************************************
# * Copyright (c) 2022 Contributors to the Eclipse Foundation
# *
# * See the NOTICE file(s) distributed with this work for additional
# * information regarding copyright ownership.
# *
# * This program and the accompanying materials are made available under the
# * terms of the Apache License 2.0 which is available at
# * https://www.apache.org/licenses/LICENSE-2.0
# *
# * SPDX-License-Identifier: Apache-2.0
# ********************************************************************************/
#
# Bootloader configuration for GRUB2 on QEMU X86_64
#
# Note: Should be in sync with the WIC Kickstarter File (.wks or .wks.in),
#       meta-leda/wic/qemux86-grub-efi.wks by default.
#
# Bootable slots:
#   index 0 -> SDV_A slot (Initially: full image)
#   index 1 -> SDV_B slot (Initially: minimal image)
#   index 2 -> SDV_R slot (Initially: rescue image)
#

# The grub default to boot, will be overridden by the RAUC logic below
default=0

# The timeout in seconds how to long to wait for user to interrupt default boot
timeout=3

# If both partitions (A and B) cannot be booted, fall back to the rescue partition
fallback=2

# Set SDV_A to be the primary boot partition
set ORDER="SDV_A SDV_B SDV_R"

# Initial defaults, will be overriden by loading the environment file
# Set both partitions into "good" RAUC state, as we prepopulate both of them with bootable images.
# See https://rauc.readthedocs.io/en/latest/reference.html#bootloader-interaction
set SDV_A_OK=1
set SDV_B_OK=1
set SDV_R_OK=1
set SDV_A_TRY=0
set SDV_B_TRY=0
set SDV_R_TRY=0

# Load the environment file from a separate (shared) partition
load_env --file=(hd0,gpt2)/grubenv

# Select bootable slot
for SLOT in $ORDER; do
    if [ "$SLOT" == "SDV_A" ]; then
        INDEX=0
        OK=$SDV_A_OK
        TRY=$SDV_A_TRY
        SDV_A_TRY=1
    fi
    if [ "$SLOT" == "SDV_B" ]; then
        INDEX=1
        OK=$SDV_B_OK
        TRY=$SDV_B_TRY
        SDV_B_TRY=1
    fi
    if [ "$SLOT" == "SDV_R" ]; then
        INDEX=2
        OK=$SDV_R_OK
        TRY=$SDV_R_TRY
        SDV_R_TRY=1
    fi
    if [ "$OK" -eq 1 -a "$TRY" -eq 0 ]; then
        default=$INDEX
        break
    fi
done

# Reset booted flags
if [ "$default" -eq 2 ]; then
    if [ "$SDV_A_OK" -eq 1 -a "$SDV_A_TRY" -eq 1 ]; then
        SDV_A_TRY=0
    fi
    if [ "$SDV_B_OK" -eq 1 -a "$SDV_B_TRY" -eq 1 ]; then
        SDV_B_TRY=0
    fi
    if [ "$SDV_R_OK" -eq 1 -a "$SDV_R_TRY" -eq 1 ]; then
        SDV_R_TRY=0
    fi
fi

# Store the new values to the grub environment into the shared partition
save_env --file=(hd0,gpt2)/grubenv SDV_A_TRY SDV_A_OK SDV_B_TRY SDV_B_OK SDV_R_OK SDV_R_TRY ORDER

# Set the GRUB Menu terminal to serial, only show ASCII characters
serial --unit=0 --speed=115200 --word=8 --parity=no --stop=1
terminal_output serial
terminal_input serial

# Default Kernel command line options
CMDLINE="console=ttyS0,115200 net.ifnames=0 panic=5 ip=dhcp ip=192.168.7.2::192.168.7.1:255.255.255.0 rootwait"

# A full-features SDV image including convenient tools
# Index 0
menuentry "SDV Full (with K8S + developer tools)" {
    linux (hd0,gpt4)/boot/bzImage root=/dev/vda4 $CMDLINE rauc.slot=SDV_A
}

# A minimally featured SDV image, only to start k3s and necessary dependencies
# Index 1
menuentry "SDV Minimal (with k8s)" {
    linux (hd0,gpt5)/boot/bzImage root=/dev/vda5 $CMDLINE rauc.slot=SDV_B
}

# A minimalistic rescue partition, intended for a future "automated rescue" use case
# For now, can be used for manual rescue operations.
# Index 2
menuentry "SDV Rescue (with cloud + self-updater, no K8S)" {
    linux (hd0,gpt3)/boot/bzImage root=/dev/vda3 $CMDLINE rauc.slot=SDV_R
}
